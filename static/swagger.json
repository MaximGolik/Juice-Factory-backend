{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Juice Store Backend API",
    "description": "В Github репозитории есть ссылка на коллекцию в Postman"
  },
  "externalDocs": {
    "description": "Github репозиторий моего проекта",
    "url": "https://github.com/MaximGolik/Juice-Factory-backend"
  },
  "tags": [
    {
      "name": "Auth Methods",
      "description": "Методы регистрации и аутентификации"
    },
    {
      "name": "Items",
      "description": "Методы, связанные с товарами"
    },
    {
      "name": "Orders",
      "description": "Методы, связанные с заказами"
    },
    {
      "name": "Users",
      "description": "Методы, связанные с пользователями"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Зарегистрировать нового пользователя",
        "tags": [
          "Auth Methods"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Email is not valid, Email/Phone number is already used, Phone number is too short"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Зайти как пользователь",
        "tags": [
          "Auth Methods"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Успешная аутентификация, получены токены и имя пользователя"
          },
          "401": {
            "description": "Неверный пароль и/или номер телефона"
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "summary": "Обновить access_token с refresh_token (необходимо указать в Authorize refresh_token пользователя",
        "tags": [
          "Auth Methods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Получен новый токен"
          },
          "401": {
            "description": "JWT не принят"
          }
        }
      }
    },
    "/user-make-admin": {
      "description": "Будет создан админ",
      "post": {
        "summary": "Cоздать админа",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "Админ добавлен"
          },
          "400": {
            "description": "Админ уже добавлен "
          }
        }
      }
    },
    "/user?user_id={user_id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Получить пользователя по user_id",
        "tags": [
          "Users"
        ],
        "responses": {
          "403": {
            "description": "Нужны права администратора"
          },
          "404": {
            "description": "Пользователь не найден"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Удалить пользователя",
        "tags": [
          "Users"
        ],
        "responses": {
          "403": {
            "description": "Нужны права администратора"
          },
          "404": {
            "description": "Пользователь не найден"
          },
          "201": {
            "description": "Пользователь успешно удален"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Изменить данные пользователя",
        "tags": [
          "Users"
        ],
        "responses": {
          "403": {
            "description": "Нужны права администратора"
          },
          "404": {
            "description": "Пользователь не найден"
          },
          "200": {
            "description": "Данные пользователя изменены"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Получить данные о пользователе по его JWT",
        "responses": {
          "404": {
            "description": "Пользователь не найден"
          },
          "200": {
            "description": "Данные пользователя получены"
          }
        }
      }
    },
    "/items-all":{
      "get": {
        "tags": ["Items"],
        "summary": "Получить все товары",
        "responses": {
          "200": {"description": "Получены все товары"}
        }
      }
    },
    "/item?item_id={item_id}": {
      "get": {
        "tags": ["Items"],
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Получить товар по его item_id",
        "responses": {
          "200": {
            "description": "Получены данные о товаре"
          },
          "404": {
            "description": "Товар не найден"
          }
        }
      },
      "delete": {
        "tags": ["Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "summary": "Удалить товар по его item_id",
        "responses": {
          "200": {
            "description": "Получены данные о товаре"
          },
          "404": {
            "description": "Товар не найден"
          }
        }
      },
      "post": {
        "tags": ["Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Добавить товар",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostItem"
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Товар успешно добавлен"},
          "403": {
            "description": "Необходимо быть админом чтобы добавить товар"
          },
          "400": {
            "description": "Не вышло обработать запрос"
          }
        }
      },
      "put": {
        "tags": ["Items"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Обновить товар",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditItem"
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Товар успешно добавлен"},
          "403": {
            "description": "Необходимо быть админом чтобы добавить товар"
          },
          "400": {
            "description": "Не вышло обработать запрос"
          },
          "404": {
            "description": "Товар не найден"
          }
        }
      }
    },
    "/orders-all": {
      "get": {
        "tags": ["Orders"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Получить все заказы",
        "responses": {
          "403": {
            "description": "Необходимы права администратора"
          },
          "200": {
            "description": "Получены все заказы"
          }
        }
      }
    },
    "/users-orders?user_id={user_id}": {
      "get": {
        "tags": ["Orders", "Users"],
        "parameters": [
          {
            "name": "user_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Получить все заказы пользователя",
        "responses": {
          "404": {
            "description": "Пользователь не найден"
          },
          "403": {
            "description": "Нужны права администратора"
          },
          "200": {
            "description": "Получен список заказов"
          }
        }
      }
    },
    "/order": {
      "post": {
        "tags": ["Orders"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOrder"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Добавить заказ",
        "responses": {
          "404": {
            "description": "Item is not present / We don't have enough."
          },
          "400": {
            "description": "Пользователь не найден"
          },
          "201": {
            "description": "Заказ сделан"
          }
        }
      }
    },
    "/order?order_id={order_id}": {
      "get": {
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "order_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Получить заказ по его order_id",
        "responses": {
          "404": {
            "description": "Заказ не найден"
          },
          "403": {
            "description": "Нужны права администратора"
          },
          "200": {
            "description": "Заказ получен"
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "order_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Удалить заказ по его order_id",
        "responses": {
          "404": {
            "description": "Заказ не найден"
          },
          "403": {
            "description": "Нужны права администратора"
          },
          "200": {
            "description": "Заказ удален"
          }
        }
      },
      "put": {
        "tags": ["Orders"],
        "deprecated": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrder"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Изменить статус заказа",
        "responses": {
          "404": {
            "description": "Заказ не найден"
          },
          "403": {
            "description": "Нужны права администратора"
          },
          "200": {
            "description": "Статус заказ изменен"
          }
        }
      }
    },
    "/image-upload?item_id={item_id}": {
      "post": {
        "tags": ["Items"],
        "summary": "Прикрепить изображение к товару",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Изображение загружено"
          },
          "400": {
            "description": "Разрешение изображение запрещено"
          },
          "403": {
            "description": "Нужны права администратора"
          },
          "404": {
            "description": "Товар не найден"
          }
        }
      },
      "get": {
        "tags": ["Items"],
        "summary": "Получить изображение товара",
        "parameters": [
          {
            "name": "item_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение полученно"
          },
          "404": {
            "description": "Изображение не найдено или не найден товар"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "example": "79877321243"
          },
          "password": {
            "type": "string",
            "example": "testPassword"
          },
          "first_name": {
            "type": "string",
            "example": "Александр"
          },
          "email": {
            "type": "string",
            "example": "testEmail@gmail.com"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "example": "79877321243"
          },
          "password": {
            "type": "string",
            "example": "testPassword"
          }
        }
      },
      "PostItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Апельсиновый сок"
          },
          "description": {
            "type": "string",
            "example": "Просто неплохой апельсиновый сок"
          },
          "price": {
            "type": "integer",
            "example": 130
          },
          "quantity": {
            "type": "integer",
            "example": 100
          }
        }
      },
      "PostOrder": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                "type": "string",
                "example": "Апельсиновый сок"
                },
                "qty": {
                "type": "integer",
                "example": 10
                }
              }
            }
          }
        }
      },
      "EditItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Test Item Updated"
          },
          "description": {
            "type": "string",
            "example": "Updated Item"
          },
          "price": {
            "type": "integer",
            "example": 1000
          },
          "quantity": {
            "type": "integer",
            "example": 100
          }
        }
      },
      "EditUser": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "example": "79788743215"
          },
          "password": {
            "type": "string",
            "example": "testPassword"
          },
          "first_name": {
            "type": "string",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "example": "updated_email@gmail.com"
          },
          "address": {
            "type": "string",
            "example": "Sevastopol, Bolshaya Morskaya street, 1"
          }
        }
      },
      "EditOrder": {
        "deprecated": true,
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "status": {
            "type": "string",
            "example": "UPDATED"
          }

        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}